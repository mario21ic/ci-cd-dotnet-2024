pipeline {
    agent any

    options {
        //ansiColor('xterm')
        timestamps()
        timeout(time: 1, unit: 'HOURS')
    }
    
    parameters {
        choice(name: 'ENV', choices: 'dev\nqa\nprod', description: 'Environment')
        string(name: 'DOCKER_IMAGE', defaultValue: 'mario21ic/dotnet-api:v1', description: 'Docker image to deploy')
        string(name: 'SLACK_CHANNEL', defaultValue: '#deploys', description: '')
    }

    environment {
        SLACK_MESSAGE = "Job '${env.JOB_NAME} - ${params.TYPE}': Build ${env.BUILD_NUMBER}"
    }

    stages {
        stage("Repository") {
            steps {
                checkout scm
            }
        }

        // stage('Copy Artifact') {
        //     steps {
        //         copyArtifacts(
        //             projectName: 'pipeline.integration',
        //             filter: 'myartifact.zip',
        //             target: 'artifacts/',
        //             selector: lastSuccessful()
        //         )
        //     }
        // }

        stage("Artifact") {
            steps {
                sh "./scripts/artifact_cd.sh"
            }
        }

        stage("Deploy") {
            steps {
                sh "./scripts/pydeploy.sh"
            }
        }

        stage('Test') {
            steps {
                sh "docker stack ls"
                sh "docker service ls"
                sh "docker service ps mystack_api"

                // sh "curl http://localhost:8081/weatherforecast | jq ."
            }
        }
    
    }
}
